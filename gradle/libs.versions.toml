[versions]
compileSdk = "34"
targetSdk = "34"
minSdk = "21"
appVersionCode = "1"
appVersionName = "1.0.0"
jvmToolchain = "17"

kotlin = "2.0.10"
daggerHilt = "2.52"

# Plugins
androidPlugin = "8.3.1"
protobufPlugin = "0.9.4"
kspPlugin = "2.0.10-1.0.24"
gradleVersionsPlugin = "0.51.0"
detektPlugin = "1.23.6"
ktlintPlugin = "12.1.1"

# Kotlin
coroutines = "1.8.1"
serialization = "1.7.1"

# AndroidX
splash = "1.0.1"
viewModel = "2.5.1" # to be deleted when the linked issue at use site is fixed
browser = "1.8.0"
room = "2.6.1"
dataStore = "1.1.1"

# Compose
composeBom = "2024.06.00"
navigation = "2.7.7"
constraintLayout = "1.1.0-alpha13"
composeHilt = "1.2.0"
accompanist = "0.34.0"

# Google
protobuf = "4.27.3"

# Square
javaPoet = "1.13.0"
okHttp = "4.12.0"
retrofit = "2.11.0"
retrofitKotlinxSerializationConverter = "1.0.0"

# Commons
commonsCore = "1.0.4"
commonsKtx = "1.0.4"
commonsNetwork = "1.0.3"
commonsWindowAnims = "1.0.2"

# Misc
desugaredJdk = "2.0.4"
kotlinResult = "2.0.0"
hiltBinder = "1.1.3"
coil = "2.7.0"
zoomable = "1.6.1"
ktlint = "1.3.1"

# Testing
jUnit = "4.13.2"
jUnitExt = "1.2.1"
truth = "1.4.4"
mockk = "1.13.12"
turbine = "1.1.0"
testRunner = "1.6.1"
archCore = "2.2.0"
mockWebServer = "4.12.0"

[plugins]
androidApplication = { id = "com.android.application", version.ref = "androidPlugin" }
androidLibrary = { id = "com.android.library", version.ref = "androidPlugin" }
kotlinJvm = { id = "kotlin", version.ref = "kotlin" }
kotlinAndroid = { id = "kotlin-android", version.ref = "kotlin" }
kotlinKapt = { id = "kotlin-kapt", version.ref = "kotlin" }
protobuf = { id = "com.google.protobuf", version.ref = "protobufPlugin" }
jetpackCompose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "kspPlugin" }
daggerHilt = { id = "com.google.dagger.hilt.android", version.ref = "daggerHilt" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
gradleVersions = { id = "com.github.ben-manes.versions", version.ref = "gradleVersionsPlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detektPlugin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintPlugin" }
gamedgeAndroid = { id = "com.paulrybitskyi.gamedge.android" }
gamedgeProtobuf = { id = "com.paulrybitskyi.gamedge.protobuf" }
gamedgeJetpackCompose = { id = "com.paulrybitskyi.gamedge.jetpack.compose" }
gamedgeDaggerHilt = { id = "com.paulrybitskyi.gamedge.dagger.hilt" }
gamedgeRemoteApi = { id = "com.paulrybitskyi.gamedge.remote.api" }
gamedgeFeature = { id = "com.paulrybitskyi.gamedge.feature" }

[libraries]
# Plugins
androidPlugin = { module = "com.android.tools.build:gradle", version.ref = "androidPlugin" }
kotlinPlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
protobufPlugin = { module = "com.google.protobuf:protobuf-gradle-plugin", version.ref = "protobufPlugin" }

# Kotlin
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinxSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

# AndroidX
splash = { module = "androidx.core:core-splashscreen", version.ref = "splash" }
browser = { module = "androidx.browser:browser", version.ref = "browser" }
room = { module = "androidx.room:room-runtime", version.ref = "room" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
prefsDataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }
protoDataStore = { module = "androidx.datastore:datastore", version.ref = "dataStore" }

# Compose
composeBom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
composeUi = { module = "androidx.compose.ui:ui" }
composeTooling = { module = "androidx.compose.ui:ui-tooling" }
composeToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }
composeFoundation = { module = "androidx.compose.foundation:foundation" }
composeMaterial = { module = "androidx.compose.material:material" }
composeRuntime = { module = "androidx.compose.runtime:runtime" }
composeAnimation = { module = "androidx.compose.animation:animation-graphics" }

composeNavigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
composeConstraintLayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintLayout" }
composeHilt = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "composeHilt" }

accompanistSwipeRefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }
accompanistSystemUi = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
accompanistNavigationAnimations = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }

# Google
daggerHiltCore = { module = "com.google.dagger:hilt-core", version.ref = "daggerHilt" }
daggerHiltCoreCompiler = { module = "com.google.dagger:hilt-compiler", version.ref = "daggerHilt" }
daggerHiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "daggerHilt" }
daggerHiltAndroidCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "daggerHilt" }
protobuf = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobuf" }
protobufCompiler = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }

# Square
okHttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitScalarsConverter = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
retrofitKotlinxSerializationConverter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofitKotlinxSerializationConverter" }
javaPoet = { module = "com.squareup:javapoet", version.ref = "javaPoet" }

# Commons
commonsCore = { module = "com.paulrybitskyi.commons:commons-core", version.ref = "commonsCore" }
commonsKtx = { module = "com.paulrybitskyi.commons:commons-ktx", version.ref = "commonsKtx" }
commonsNetwork = { module = "com.paulrybitskyi.commons:commons-network", version.ref = "commonsNetwork" }
commonsWindowAnims = { module = "com.paulrybitskyi.commons:commons-window-anims", version.ref = "commonsWindowAnims" }

# Misc
desugaredJdk = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugaredJdk" }
kotlinResult = { module = "com.michael-bull.kotlin-result:kotlin-result", version.ref = "kotlinResult" }
hiltBinder = { module = "com.paulrybitskyi:hilt-binder", version.ref = "hiltBinder" }
hiltBinderCompiler = { module = "com.paulrybitskyi:hilt-binder-compiler", version.ref = "hiltBinder" }
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
zoomable = { module = "com.mxalbert.zoomable:zoomable", version.ref = "zoomable" }

# Testing
jUnit = { module = "junit:junit", version.ref = "jUnit" }
jUnitExt = { module = "androidx.test.ext:junit", version.ref = "jUnitExt" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
coroutinesTesting = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
testRunner = { module = "androidx.test:runner", version.ref = "testRunner" }
archCore = { module = "androidx.arch.core:core-testing", version.ref = "archCore" }
daggerHiltTesting = { module = "com.google.dagger:hilt-android-testing", version.ref = "daggerHilt" }
roomTesting = { module = "androidx.room:room-testing", version.ref = "room" }
mockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockWebServer" }

[bundles]
testing = [
    "jUnit",
    "truth",
    "mockk",
    "coroutinesTesting",
    "turbine",
]

testingAndroid = [
    "testRunner",
    "jUnit",
    "jUnitExt",
    "truth",
    "coroutinesTesting",
    "turbine",
]
