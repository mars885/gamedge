name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  JDK_JAVA_DISTRIBUTION: 'temurin'
  JDK_JAVA_VERSION: '17'

jobs:
  static-analysis:
    name: Static Analysis
    runs-on: [ ubuntu-latest ]
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JDK_JAVA_DISTRIBUTION }}
          java-version: ${{ env.JDK_JAVA_VERSION }}

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run Static Analysis Tools
        run: ./gradlew lint detekt ktlintCheck --continue

  unit-test:
    name: Unit Tests
    runs-on: [ubuntu-latest]
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JDK_JAVA_DISTRIBUTION }}
          java-version: ${{ env.JDK_JAVA_VERSION }}

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run Unit Tests
        run: ./gradlew test

  instrumentation-test:
    name: Instrumentation Tests
    runs-on: [ubuntu-latest]
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JDK_JAVA_DISTRIBUTION }}
          java-version: ${{ env.JDK_JAVA_VERSION }}

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis # https://github.com/ReactiveCircus/android-emulator-runner/issues/106
          script: ./gradlew connectedAndroidTest

  assemble:
    name: App Assembling
    runs-on: [ubuntu-latest]
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JDK_JAVA_DISTRIBUTION }}
          java-version: ${{ env.JDK_JAVA_VERSION }}

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build Debug APK
        run: ./gradlew assembleDebug
